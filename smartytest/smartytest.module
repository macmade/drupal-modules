<?php

# $Id$

/**
 * Drupal 'help' hook
 * 
 * This function returns the help text for the admin/help# page. The label
 * returned must be placed in the module's lang file, in the 'lang/'
 * directory. It's the 'help' node of the 'system' section.
 * 
 * @param   string  The path for which to display help
 * @param   array   An array that holds the current path as would be returned from the arg() function
 * @return  string  The help text
 * @see     Oop_Drupal_Hooks::help
 */
function smartytest_help( $path, $arg )
{
    return Oop_Core_ClassManager::getInstance()->getModule( 'smartytest' )->help( $path, $arg );
}

/**
 * Drupal 'perm' hook
 * 
 * This function returns the available permissions for the module. They must
 * be declared in the $_perm property of the module class.
 * 
 * @return  array   The permissions array
 * @see     Oop_Drupal_Hooks::perm
 */
function smartytest_perm()
{
    return Oop_Core_ClassManager::getInstance()->getModule( 'smartytest' )->perm();
}

/**
 * Drupal 'block' hook
 * 
 * This function lets Drupal know that the module has block content. The method
 * used to generate the block content is getBlock(), defined in the module
 * class.
 * 
 * @param   string  The kind of block to display
 * @param   int     The delta offset, used to generate different contents for different blocks
 * @param   array   The edited items (only if $op is 'save')
 * @return  array   The Drupal block
 * @see     Oop_Drupal_Hooks::block
 * @see     smartytest::getBlock
 */
function smartytest_block( $op = 'list', $delta = 0, array $edit = array() )
{
    return Oop_Core_ClassManager::getInstance()->getModule( 'smartytest' )->block( $op, $delta, $edit );
}
